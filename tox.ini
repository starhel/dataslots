[tox]
minversion = 3.23.0
isolated_build = true
envlist = py{37,38,39,310,311}, pypy{37,38,39}, lint, typing, coverage

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311, lint, typing
    pypy-3.7: pypy37
    pypy-3.8: pypy38
    pypy-3.9: pypy39

[testenv]
deps =
    pytest >= 6.1
    pytest-cov >= 2.11.1
    coverage >= 7.0.2
setenv =
    COVERAGE_FILE=.coverage.{envname}
commands =
    pytest --cov=dataslots --cov-fail-under=100 --cov-report=term-missing --cov-config=tox.ini {posargs:-vv}

[testenv:lint]
basepython = python3.11
deps =
    {[testenv]deps}
    flake8
    pyroma
commands =
    flake8 --max-line-length 119 src tests
    pyroma .

[testenv:typing]
basepython = python3.11
deps =
    {[testenv]deps}
    mypy
    pyright
commands =
    # test_descriptor: https://github.com/python/mypy/issues/13856
    # test_backport: https://github.com/python/mypy/issues/14293
    mypy src tests --exclude tests/test_backport.py --exclude tests/test_descriptor.py --check-untyped-defs
    pyright src tests

[testenv:coverage]
setenv =
    COVERAGE_FILE=.coverage
skip_install = true
depends = py{37,38,39,310,311}, pypy{37,38,39}
deps =
    coverage >= 7.0.2
commands =
    coverage combine
    coverage xml -i

[testenv:dev]
basepython = python3.11
deps =
    {[testenv:lint]deps}
    {[testenv:typing]deps}
usedevelop = true
envdir = venv
commands =

[testenv:build]
skip_install = true
deps =
  build
commands =
  python -m build --outdir dist/ .

[coverage:run]
branch = true

[coverage:paths]
source =
   src/
   .tox/*/site-packages/

[coverage:report]
exclude_lines =
    @abstractmethod
    @overload
    except ImportError

